generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Utilisateur {
  id         Int      @id @default(autoincrement())
  login      String   @unique
  password   String
  nom        String
  prenom     String
  numero     String
  etatCompte String   @default("actif")
  email      String   @unique
  idRole     Int
  Role       Role     @relation(fields: [idRole], references: [id])
  Contacts   Contact[]
  Interventions Intervention[] @relation("TechnicienIntervention")
  Maintenances Maintenance[]   @relation("TechnicienMaintenance")
  Sessions   Session[]
  Commentaires Commentaire[]
  CommentairesMaintenances CommentaireMaintenance[]
}

model Role {
  id            Int          @id @default(autoincrement())
  nom           String
  Utilisateurs  Utilisateur[]
}

model Session {
  id            Int      @id @default(autoincrement())
  userId        Int
  token         String
  expires       DateTime
  Utilisateur   Utilisateur @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  id            Int      @id @default(autoincrement())
  email         String
  token         String
  expires       DateTime
  createdAt     DateTime @default(now())
}

model Client {
  id                Int      @id @default(autoincrement())
  nom               String
  secteurDactivite  String
  Sites             Site[]
  Contacts          Contact[]
  Installations     Installation[]
  Interventions     Intervention[]
}

model Site {
  id                Int      @id @default(autoincrement())
  nom               String
  idClient          Int
  adresse           String
  Client            Client    @relation(fields: [idClient], references: [id], onDelete: Cascade)
  Contacts          ContactSite[]
  Installations     Installation[]
  Contrats          Contrat[]
  Interventions     Intervention[]
  Maintenances      Maintenance[]
}

model Contact {
  id                Int         @id @default(autoincrement())
  idClient          Int
  idUtilisateur     Int
  Client            Client      @relation(fields: [idClient], references: [id], onDelete: Cascade)
  Utilisateur       Utilisateur @relation(fields: [idUtilisateur], references: [id], onDelete: Cascade)
  ContactSites      ContactSite[]
  Maintenances      Maintenance[]
}

model ContactSite {
  id                Int      @id @default(autoincrement())
  estManager        Boolean
  idSite            Int
  idContact         Int
  Site              Site      @relation(fields: [idSite], references: [id], onDelete: Cascade)
  Contact           Contact   @relation(fields: [idContact], references: [id], onDelete: Cascade)
}

model Systeme {
  id                Int      @id @default(autoincrement())
  nom               String
  Equipements       Equipement[]
  Actions           ActionMaintenance[]
  Installations     Installation[]
  Interventions Intervention[]
}

model Equipement {
  id                Int      @id @default(autoincrement())
  nom               String
  idMarqueSsi       Int
  idModeleSsi       Int
  idSysteme         Int
  MarqueSsi         MarqueSsi @relation(fields: [idMarqueSsi], references: [id])
  ModeleSsi         ModeleSsi @relation(fields: [idModeleSsi], references: [id])
  Systeme           Systeme   @relation(fields: [idSysteme], references: [id])
  InstallationsEquipement InstallationEquipement[]
  Extincteurs       Extincteur[] 
}
model Extincteur{
  id                Int      @id @default(autoincrement())
  idEquipement      Int
  typePression      Type_Pression
  modeVerification  Mode_Verification
  chargeReference   Int?
  tare              Int?
  sparklet         Boolean @default(false)
  chargeReferenceSparklet Int?
  poidsMax          Int?
  poidsMin          Int?
  idTypeExtincteur Int
  TypeExtincteur    TypeExtincteur @relation(fields: [idTypeExtincteur], references: [id])
  Equipement        Equipement @relation(fields: [idEquipement], references: [id], onDelete: Cascade)
}
model TypeExtincteur{
  id                Int      @id @default(autoincrement())
  nom               String
  Extincteurs   Extincteur[]
}
model MarqueSsi {
  id                Int         @id @default(autoincrement())
  nom               String
  Equipements       Equipement[]
}

model ModeleSsi {
  id                Int         @id @default(autoincrement())
  nom               String
  Equipements       Equipement[]
}

model Installation {
  id                Int      @id @default(autoincrement())
  dateInstallation  DateTime
  dateMaintenance   DateTime?
  observations      String?
  idClient          Int
  idSysteme         Int
  idSite            Int?
  Client            Client     @relation(fields: [idClient], references: [id], onDelete: Cascade)
  Systeme           Systeme    @relation(fields: [idSysteme], references: [id], onDelete: Cascade)
  Site              Site?      @relation(fields: [idSite], references: [id], onDelete: Cascade)
  EquipementsInstallation InstallationEquipement[]
  Maintenance       Maintenance[]
 
}

model InstallationEquipement {
  id                Int      @id @default(autoincrement())
  statut            EnumStatut_Statut_Equipement @default(OK)
  Numero            String?
  Emplacement       String?
  Commentaires      String?
  HorsService       Boolean @default(false)
  dateInstallation  DateTime
  dateMaintenance   DateTime?
  idEquipement      Int
  idInstallation    Int
  estGaranti        Boolean  @default(true)
  Equipement        Equipement   @relation(fields: [idEquipement], references: [id], onDelete: Cascade)
  Installation      Installation @relation(fields: [idInstallation], references: [id], onDelete: Cascade)
  Garanties         Garantie[]
  InstallationExtincteur InstallationExtincteur[]

  @@index([idEquipement,idInstallation])
  @@index([statut])
}
model InstallationExtincteur{
  id                Int      @id @default(autoincrement())
  idInstallationEquipement Int
  DateFabrication   DateTime
  DatePremierChargement DateTime
  DateDerniereVerification DateTime
  InstallationEquipement InstallationEquipement @relation(fields: [idInstallationEquipement], references: [id])
  MaintenanceActionExtincteur MaintenanceActionExtincteur[]

  @@index([idInstallationEquipement,DateDerniereVerification])
}

model Contrat {
  id                Int      @id @default(autoincrement())
  nom               String
  dateDebut         DateTime
  dateFin           DateTime
  periodicite       String
  typeContrat       String
  pieceMainDoeuvre  Boolean @default(false)
  idSite            Int
  Site              Site     @relation(fields: [idSite], references: [id], onDelete: Cascade)
}

model Garantie {
  id                Int      @id @default(autoincrement())
  dateDebutGarantie DateTime
  dateFinGarantie   DateTime
  idInstallationEq  Int
  InstallationEquipement InstallationEquipement @relation(fields: [idInstallationEq], references: [id])
}

model Maintenance {
  id                Int      @id @default(autoincrement())
  numero            String
  dateMaintenance   DateTime?
  dateFinMaint      DateTime?
  description       String
  statut            EnumStatut_m @default(PLANIFIE)
  typeMaintenance   String
  datePlanifiee     DateTime?
  idTechnicien      Int
  idSite            Int
  idInstallation    Int
  idContact         Int
  Site              Site     @relation(fields: [idSite], references: [id], onDelete: Cascade)
  Contact           Contact  @relation(fields: [idContact], references: [id], onDelete: Cascade)
  Installation      Installation @relation(fields: [idInstallation], references: [id], onDelete: Cascade)
  Technicien        Utilisateur  @relation("TechnicienMaintenance", fields: [idTechnicien], references: [id])
  Actions           MaintenanceAction[]
  CommentairesMaintenances CommentaireMaintenance[]
  MaintenanceActionExtincteur MaintenanceActionExtincteur[]

  @@index([idTechnicien,statut, datePlanifiee])
  @@index([idInstallation,dateMaintenance])
}

model CommentaireMaintenance {
  id                Int      @id @default(autoincrement())
  idMaintenance     Int
  idUtilisateur     Int
  commentaire       String
  dateCommentaire   DateTime @default(now())
  Utilisateur       Utilisateur @relation(fields: [idUtilisateur], references: [id])
  Maintenance      Maintenance @relation(fields: [idMaintenance], references: [id])
}

model ActionMaintenance {
  id                Int      @id @default(autoincrement())
  libeleAction      String
  idSysteme         Int
  Systeme           Systeme   @relation(fields: [idSysteme], references: [id])
  MaintenanceActions MaintenanceAction[]
}

model MaintenanceAction {
  id                Int      @id @default(autoincrement())
  statut            Boolean
  observation       String
  idMaintenance     Int
  idAction          Int
  Maintenance       Maintenance       @relation(fields: [idMaintenance], references: [id])
  Action            ActionMaintenance @relation(fields: [idAction], references: [id])
}
model MaintenanceActionExtincteur {
  id                Int      @id @default(autoincrement())
  idMaintenance     Int
  idActionMaintenanceExtincteur Int
  idInstallationExtincteur Int
  InstallationExtincteur InstallationExtincteur @relation(fields: [idInstallationExtincteur], references: [id])
  Maintenance       Maintenance       @relation(fields: [idMaintenance], references: [id])
  ActionMaintenanceExtincteur ActionMaintenanceExtincteur @relation(fields: [idActionMaintenanceExtincteur], references: [id])
  statut            Boolean
  observation       String
}
model ActionMaintenanceExtincteur {
  id                Int      @id @default(autoincrement())
  libeleAction      String
  MaintenanceActionExtincteur MaintenanceActionExtincteur[]
  }
model Intervention {
  id                Int      @id @default(autoincrement())
  statut            EnumStatut_i @default(NON_PLANIFIE)
  typePanneDeclare  String
  dateDeclaration   DateTime
  sousGarantie       Boolean? @default(true)
  urgent              Boolean? @default(false)
  idClient          Int?
  idSite            Int?
  idSysteme         Int?
  Systeme      Systeme? @relation(fields: [idSysteme], references: [id])
  Client            Client?      @relation(fields: [idClient], references: [id])
  Site              Site?        @relation(fields: [idSite], references: [id])
  diagnostics       String?
  travauxRealises   String?
  datePlanifiee     DateTime?
  dateIntervention  DateTime?
  dureeHeure        Int?
  dateFinInt        DateTime? 
  numero            Int?
  horsDelai             Boolean @default(false)
  idTechnicien      Int?
  prenomContact     String?
  telephoneContact  String?
  adresse           String?
  Technicien        Utilisateur? @relation("TechnicienIntervention", fields: [idTechnicien], references: [id])
  Commentaires      Commentaire[]
  
  @@index([idTechnicien,statut, datePlanifiee])
  @@index([idClient,dateDeclaration])
  @@index([idSysteme,statut])
  @@index([urgent,statut])
}
model Commentaire {
  id                Int      @id @default(autoincrement())
  idIntervention    Int
  idUtilisateur     Int
  commentaire       String
  dateCommentaire   DateTime @default(now())
  Utilisateur       Utilisateur @relation(fields: [idUtilisateur], references: [id])
  Intervention      Intervention @relation(fields: [idIntervention], references: [id])
}
enum EnumStatut_i {
  EN_COURS
  SUSPENDU
  TERMINE
  NON_PLANIFIE
  PLANIFIE
}


enum EnumStatut_m {
  EN_COURS
  SUSPENDU
  TERMINE
  PLANIFIE
}
enum EnumStatut_Statut_Equipement {
A_REPARER
A_CHANGER
OK
}

enum Type_Pression{
  PP
  PA
}
enum Mode_Verification{
  V5
  V10
}
